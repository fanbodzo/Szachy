bedziemy uzywac wzorcow projekotwych :
- Struktura gry:
    = MVC - rozdzielenie logiki gry od widoku i sterowania (rdzen)
      model - do logiki
      view - do interfejsu uzytkownika
      controler - do logiki sterowania
    = observer - do aktualizacji zmiany widoku po kadej zmianie stanu : ruchu pionka i zmianie widoku
- Logika gry i obiekty
    = command - reprezentacja ruchow szachowych jako obiektow , co daje mozliwosc latwego cofania
    = factory method do tworenia figur
    = builder - tworzenie nowych aprtii i zarzadanie typu nw ip czy cos
    = mozna dodac cos na obsluge stanow jak np bialy ma ruch albo promocja figury

- komunikacja i wielowatkowosc:
    = Proxy - do komunikacji , klient server
    = singleton - server bedzie globalnym obiektem zarzadzajacy akzda partia
    , bedize tworzyc obiekty typu game
    = executor service - Thread pool - wielowatkowosc np zegar

baza danych opcjonalnie

oop:
dziedziczenie - z "figura" i beda tworzone na tej bazie inne figury pionek ,kon itd
polimorfizm - getter na sprawdzanie dostepnych ruchow dla kazdej figury idealna sytuacja na zastosowanie
abstrcyjne klasy to bedzie wlasnie figura
interfjsy - do wygladu gry napewno i orzyciskow tak jak w ostanim projekcie
